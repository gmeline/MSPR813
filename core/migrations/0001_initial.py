# Generated by Django 5.1.7 on 2025-04-20 14:21

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CriminalityPerCir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_circonscription', models.TextField(blank=True, db_column='code_circonscription', help_text='Code identifying the circonscription', null=True)),
                ('annee', models.IntegerField(blank=True, db_column='annee', help_text='Year of the data', null=True)),
                ('nombre', models.IntegerField(blank=True, db_column='nombre', help_text='Number of criminal incidents', null=True)),
                ('population', models.IntegerField(blank=True, db_column='population', help_text='Population of the circonscription for that year', null=True)),
                ('taux_pour_mille', models.FloatField(blank=True, db_column='taux_pour_mille', help_text='Criminality rate per thousand inhabitants', null=True)),
            ],
            options={
                'db_table': 'criminality_per_cir',
            },
        ),
        migrations.CreateModel(
            name='DensityPopulation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code_departement', models.IntegerField(blank=True, null=True)),
                ('density', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'density_population',
            },
        ),
        migrations.CreateModel(
            name='LegislativePerCir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_du_departement', models.IntegerField(blank=True, null=True)),
                ('libelle_du_departement', models.TextField(blank=True, null=True)),
                ('code_de_la_circonscription', models.TextField(blank=True, null=True)),
                ('inscrits', models.IntegerField(blank=True, null=True)),
                ('votants', models.IntegerField(blank=True, null=True)),
                ('exprimes', models.IntegerField(blank=True, null=True)),
                ('blancs_et_nuls', models.IntegerField(blank=True, null=True)),
                ('nuance', models.TextField(blank=True, null=True)),
                ('voix', models.IntegerField(blank=True, null=True)),
                ('nuance_2', models.TextField(blank=True, null=True)),
                ('voix_2', models.IntegerField(blank=True, null=True)),
                ('nuance_3', models.TextField(blank=True, null=True)),
                ('voix_3', models.IntegerField(blank=True, null=True)),
                ('annee', models.IntegerField(blank=True, null=True)),
                ('gagnant', models.TextField(blank=True, null=True)),
                ('voix_gagnant', models.IntegerField(blank=True, null=True)),
                ('gagnant_precedent', models.TextField(blank=True, null=True)),
                ('voix_gagnant_precedent', models.IntegerField(blank=True, null=True)),
                ('encodage_sans_centre_nuance', models.IntegerField(blank=True, null=True)),
                ('encodage_avec_centre_nuance', models.IntegerField(blank=True, null=True)),
                ('encodage_centre_extremes_nuance', models.IntegerField(blank=True, null=True)),
                ('encodage_sans_centre_nuance_2', models.IntegerField(blank=True, null=True)),
                ('encodage_avec_centre_nuance_2', models.IntegerField(blank=True, null=True)),
                ('encodage_centre_extremes_nuance_2', models.IntegerField(blank=True, null=True)),
                ('encodage_sans_centre_nuance_3', models.IntegerField(blank=True, null=True)),
                ('encodage_avec_centre_nuance_3', models.IntegerField(blank=True, null=True)),
                ('encodage_centre_extremes_nuance_3', models.IntegerField(blank=True, null=True)),
                ('encodage_sans_centre_gagnant', models.IntegerField(blank=True, null=True)),
                ('encodage_avec_centre_gagnant', models.IntegerField(blank=True, null=True)),
                ('encodage_centre_extremes_gagnant', models.IntegerField(blank=True, null=True)),
                ('encodage_sans_centre_gagnant_precedent', models.IntegerField(blank=True, null=True)),
                ('encodage_avec_centre_gagnant_precedent', models.IntegerField(blank=True, null=True)),
                ('encodage_centre_extremes_gagnant_precedent', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'legislative_per_cir',
            },
        ),
        migrations.CreateModel(
            name='UnemploymentPerCir',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code_circonscription', models.TextField(blank=True, null=True)),
                ('annee', models.IntegerField(blank=True, null=True)),
                ('populationauth_groupunemployment_per_cir', models.IntegerField(blank=True, null=True)),
                ('chomeurs', models.IntegerField(blank=True, null=True)),
                ('taux_chomage', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'unemployment_per_cir',
            },
        ),
    ]
